// ==============================================================
// Generated by Vitis HLS v2022.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module decompressor_kernel_code_generator_array_dyn_new_Pipeline_CodeGen (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        firstCode_14_reload,
        firstCode_13_reload,
        firstCode_12_reload,
        firstCode_11_reload,
        firstCode_10_reload,
        firstCode_9_reload,
        firstCode_8_reload,
        firstCode_7_reload,
        firstCode_6_reload,
        firstCode_5_reload,
        firstCode_4_reload,
        firstCode_3_reload,
        firstCode_2_reload,
        firstCode_1_reload,
        firstCode_reload,
        codes_val,
        bl1Codes_address0,
        bl1Codes_ce0,
        bl1Codes_we0,
        bl1Codes_d0,
        bl2Codes_address0,
        bl2Codes_ce0,
        bl2Codes_we0,
        bl2Codes_d0,
        bl3Codes_address0,
        bl3Codes_ce0,
        bl3Codes_we0,
        bl3Codes_d0,
        bl4Codes_address0,
        bl4Codes_ce0,
        bl4Codes_we0,
        bl4Codes_d0,
        bl5Codes_address0,
        bl5Codes_ce0,
        bl5Codes_we0,
        bl5Codes_d0,
        bl6Codes_address0,
        bl6Codes_ce0,
        bl6Codes_we0,
        bl6Codes_d0,
        bl7Codes_address0,
        bl7Codes_ce0,
        bl7Codes_we0,
        bl7Codes_d0,
        bl8Codes_address0,
        bl8Codes_ce0,
        bl8Codes_we0,
        bl8Codes_d0,
        bl9Codes_address0,
        bl9Codes_ce0,
        bl9Codes_we0,
        bl9Codes_d0,
        bl10Codes_address0,
        bl10Codes_ce0,
        bl10Codes_we0,
        bl10Codes_d0,
        bl11Codes_address0,
        bl11Codes_ce0,
        bl11Codes_we0,
        bl11Codes_d0,
        bl12Codes_address0,
        bl12Codes_ce0,
        bl12Codes_we0,
        bl12Codes_d0,
        bl13Codes_address0,
        bl13Codes_ce0,
        bl13Codes_we0,
        bl13Codes_d0,
        bl14Codes_address0,
        bl14Codes_ce0,
        bl14Codes_we0,
        bl14Codes_d0,
        bl15Codes_address0,
        bl15Codes_ce0,
        bl15Codes_we0,
        bl15Codes_d0,
        idx,
        lens_address0,
        lens_ce0,
        lens_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [14:0] firstCode_14_reload;
input  [14:0] firstCode_13_reload;
input  [14:0] firstCode_12_reload;
input  [14:0] firstCode_11_reload;
input  [14:0] firstCode_10_reload;
input  [14:0] firstCode_9_reload;
input  [14:0] firstCode_8_reload;
input  [14:0] firstCode_7_reload;
input  [14:0] firstCode_6_reload;
input  [14:0] firstCode_5_reload;
input  [14:0] firstCode_4_reload;
input  [14:0] firstCode_3_reload;
input  [14:0] firstCode_2_reload;
input  [14:0] firstCode_1_reload;
input  [14:0] firstCode_reload;
input  [8:0] codes_val;
output  [0:0] bl1Codes_address0;
output   bl1Codes_ce0;
output   bl1Codes_we0;
output  [8:0] bl1Codes_d0;
output  [1:0] bl2Codes_address0;
output   bl2Codes_ce0;
output   bl2Codes_we0;
output  [8:0] bl2Codes_d0;
output  [2:0] bl3Codes_address0;
output   bl3Codes_ce0;
output   bl3Codes_we0;
output  [8:0] bl3Codes_d0;
output  [3:0] bl4Codes_address0;
output   bl4Codes_ce0;
output   bl4Codes_we0;
output  [8:0] bl4Codes_d0;
output  [4:0] bl5Codes_address0;
output   bl5Codes_ce0;
output   bl5Codes_we0;
output  [8:0] bl5Codes_d0;
output  [5:0] bl6Codes_address0;
output   bl6Codes_ce0;
output   bl6Codes_we0;
output  [8:0] bl6Codes_d0;
output  [6:0] bl7Codes_address0;
output   bl7Codes_ce0;
output   bl7Codes_we0;
output  [8:0] bl7Codes_d0;
output  [7:0] bl8Codes_address0;
output   bl8Codes_ce0;
output   bl8Codes_we0;
output  [8:0] bl8Codes_d0;
output  [7:0] bl9Codes_address0;
output   bl9Codes_ce0;
output   bl9Codes_we0;
output  [8:0] bl9Codes_d0;
output  [7:0] bl10Codes_address0;
output   bl10Codes_ce0;
output   bl10Codes_we0;
output  [8:0] bl10Codes_d0;
output  [7:0] bl11Codes_address0;
output   bl11Codes_ce0;
output   bl11Codes_we0;
output  [8:0] bl11Codes_d0;
output  [7:0] bl12Codes_address0;
output   bl12Codes_ce0;
output   bl12Codes_we0;
output  [8:0] bl12Codes_d0;
output  [7:0] bl13Codes_address0;
output   bl13Codes_ce0;
output   bl13Codes_we0;
output  [8:0] bl13Codes_d0;
output  [7:0] bl14Codes_address0;
output   bl14Codes_ce0;
output   bl14Codes_we0;
output  [8:0] bl14Codes_d0;
output  [7:0] bl15Codes_address0;
output   bl15Codes_ce0;
output   bl15Codes_we0;
output  [8:0] bl15Codes_d0;
input  [8:0] idx;
output  [8:0] lens_address0;
output   lens_ce0;
input  [4:0] lens_q0;

reg ap_idle;
reg bl1Codes_ce0;
reg bl1Codes_we0;
reg bl2Codes_ce0;
reg bl2Codes_we0;
reg bl3Codes_ce0;
reg bl3Codes_we0;
reg bl4Codes_ce0;
reg bl4Codes_we0;
reg bl5Codes_ce0;
reg bl5Codes_we0;
reg bl6Codes_ce0;
reg bl6Codes_we0;
reg bl7Codes_ce0;
reg bl7Codes_we0;
reg bl8Codes_ce0;
reg bl8Codes_we0;
reg bl9Codes_ce0;
reg bl9Codes_we0;
reg bl10Codes_ce0;
reg bl10Codes_we0;
reg bl11Codes_ce0;
reg bl11Codes_we0;
reg bl12Codes_ce0;
reg bl12Codes_we0;
reg bl13Codes_ce0;
reg bl13Codes_we0;
reg bl14Codes_ce0;
reg bl14Codes_we0;
reg bl15Codes_ce0;
reg bl15Codes_we0;
reg lens_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln794_fu_625_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [8:0] i_reg_1132;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln796_fu_643_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln842_fu_670_p1;
wire   [0:0] icmp_ln797_fu_653_p2;
wire   [63:0] zext_ln839_fu_682_p1;
wire   [63:0] zext_ln836_fu_694_p1;
wire   [63:0] zext_ln833_fu_706_p1;
wire   [63:0] zext_ln830_fu_718_p1;
wire   [63:0] zext_ln827_fu_730_p1;
wire   [63:0] zext_ln824_fu_742_p1;
wire   [63:0] zext_ln821_fu_750_p1;
wire   [63:0] zext_ln818_fu_758_p1;
wire   [63:0] zext_ln815_fu_766_p1;
wire   [63:0] zext_ln812_fu_774_p1;
wire   [63:0] zext_ln809_fu_782_p1;
wire   [63:0] zext_ln806_fu_790_p1;
wire   [63:0] zext_ln803_fu_798_p1;
wire   [63:0] zext_ln800_fu_806_p1;
reg   [8:0] i_4_fu_168;
wire   [8:0] i_5_fu_631_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_i;
reg   [14:0] firstCode_15_fu_172;
wire   [14:0] firstCode_29_fu_924_p2;
wire   [3:0] trunc_ln798_fu_659_p1;
reg   [14:0] firstCode_fu_176;
reg   [14:0] firstCode_16_fu_180;
reg   [14:0] firstCode_17_fu_184;
reg   [14:0] firstCode_18_fu_188;
reg   [14:0] firstCode_19_fu_192;
reg   [14:0] firstCode_20_fu_196;
reg   [14:0] firstCode_21_fu_200;
reg   [14:0] firstCode_22_fu_204;
reg   [14:0] firstCode_23_fu_208;
reg   [14:0] firstCode_24_fu_212;
reg   [14:0] firstCode_25_fu_216;
reg   [14:0] firstCode_26_fu_220;
reg   [14:0] firstCode_27_fu_224;
reg   [14:0] firstCode_28_fu_228;
wire   [8:0] add_ln796_fu_637_p2;
wire   [7:0] trunc_ln842_fu_666_p1;
wire   [7:0] trunc_ln839_fu_678_p1;
wire   [7:0] trunc_ln836_fu_690_p1;
wire   [7:0] trunc_ln833_fu_702_p1;
wire   [7:0] trunc_ln830_fu_714_p1;
wire   [7:0] trunc_ln827_fu_726_p1;
wire   [7:0] trunc_ln824_fu_738_p1;
wire   [14:0] tmp_14_fu_856_p31;
wire   [3:0] tmp_14_fu_856_p32;
wire   [14:0] tmp_14_fu_856_p33;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_612;
reg    ap_condition_616;
reg    ap_condition_620;
reg    ap_condition_624;
reg    ap_condition_628;
reg    ap_condition_632;
reg    ap_condition_636;
reg    ap_condition_640;
reg    ap_condition_644;
reg    ap_condition_648;
reg    ap_condition_652;
reg    ap_condition_656;
reg    ap_condition_660;
reg    ap_condition_663;
reg    ap_condition_667;
wire   [3:0] tmp_14_fu_856_p1;
wire   [3:0] tmp_14_fu_856_p3;
wire   [3:0] tmp_14_fu_856_p5;
wire   [3:0] tmp_14_fu_856_p7;
wire   [3:0] tmp_14_fu_856_p9;
wire   [3:0] tmp_14_fu_856_p11;
wire   [3:0] tmp_14_fu_856_p13;
wire  signed [3:0] tmp_14_fu_856_p15;
wire  signed [3:0] tmp_14_fu_856_p17;
wire  signed [3:0] tmp_14_fu_856_p19;
wire  signed [3:0] tmp_14_fu_856_p21;
wire  signed [3:0] tmp_14_fu_856_p23;
wire  signed [3:0] tmp_14_fu_856_p25;
wire  signed [3:0] tmp_14_fu_856_p27;
wire  signed [3:0] tmp_14_fu_856_p29;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_4_fu_168 = 9'd0;
#0 firstCode_15_fu_172 = 15'd0;
#0 firstCode_fu_176 = 15'd0;
#0 firstCode_16_fu_180 = 15'd0;
#0 firstCode_17_fu_184 = 15'd0;
#0 firstCode_18_fu_188 = 15'd0;
#0 firstCode_19_fu_192 = 15'd0;
#0 firstCode_20_fu_196 = 15'd0;
#0 firstCode_21_fu_200 = 15'd0;
#0 firstCode_22_fu_204 = 15'd0;
#0 firstCode_23_fu_208 = 15'd0;
#0 firstCode_24_fu_212 = 15'd0;
#0 firstCode_25_fu_216 = 15'd0;
#0 firstCode_26_fu_220 = 15'd0;
#0 firstCode_27_fu_224 = 15'd0;
#0 firstCode_28_fu_228 = 15'd0;
#0 ap_done_reg = 1'b0;
end

decompressor_kernel_sparsemux_31_4_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h1 ),
    .din0_WIDTH( 15 ),
    .CASE1( 4'h2 ),
    .din1_WIDTH( 15 ),
    .CASE2( 4'h3 ),
    .din2_WIDTH( 15 ),
    .CASE3( 4'h4 ),
    .din3_WIDTH( 15 ),
    .CASE4( 4'h5 ),
    .din4_WIDTH( 15 ),
    .CASE5( 4'h6 ),
    .din5_WIDTH( 15 ),
    .CASE6( 4'h7 ),
    .din6_WIDTH( 15 ),
    .CASE7( 4'h8 ),
    .din7_WIDTH( 15 ),
    .CASE8( 4'h9 ),
    .din8_WIDTH( 15 ),
    .CASE9( 4'hA ),
    .din9_WIDTH( 15 ),
    .CASE10( 4'hB ),
    .din10_WIDTH( 15 ),
    .CASE11( 4'hC ),
    .din11_WIDTH( 15 ),
    .CASE12( 4'hD ),
    .din12_WIDTH( 15 ),
    .CASE13( 4'hE ),
    .din13_WIDTH( 15 ),
    .CASE14( 4'hF ),
    .din14_WIDTH( 15 ),
    .def_WIDTH( 15 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 15 ))
sparsemux_31_4_15_1_1_U206(
    .din0(firstCode_15_fu_172),
    .din1(firstCode_fu_176),
    .din2(firstCode_16_fu_180),
    .din3(firstCode_17_fu_184),
    .din4(firstCode_18_fu_188),
    .din5(firstCode_19_fu_192),
    .din6(firstCode_20_fu_196),
    .din7(firstCode_21_fu_200),
    .din8(firstCode_22_fu_204),
    .din9(firstCode_23_fu_208),
    .din10(firstCode_24_fu_212),
    .din11(firstCode_25_fu_216),
    .din12(firstCode_26_fu_220),
    .din13(firstCode_27_fu_224),
    .din14(firstCode_28_fu_228),
    .def(tmp_14_fu_856_p31),
    .sel(tmp_14_fu_856_p32),
    .dout(tmp_14_fu_856_p33)
);

decompressor_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_15_fu_172 <= firstCode_reload;
        end else if ((1'b1 == ap_condition_612)) begin
            firstCode_15_fu_172 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_16_fu_180 <= firstCode_2_reload;
        end else if ((1'b1 == ap_condition_616)) begin
            firstCode_16_fu_180 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_17_fu_184 <= firstCode_3_reload;
        end else if ((1'b1 == ap_condition_620)) begin
            firstCode_17_fu_184 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_18_fu_188 <= firstCode_4_reload;
        end else if ((1'b1 == ap_condition_624)) begin
            firstCode_18_fu_188 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_19_fu_192 <= firstCode_5_reload;
        end else if ((1'b1 == ap_condition_628)) begin
            firstCode_19_fu_192 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_20_fu_196 <= firstCode_6_reload;
        end else if ((1'b1 == ap_condition_632)) begin
            firstCode_20_fu_196 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_21_fu_200 <= firstCode_7_reload;
        end else if ((1'b1 == ap_condition_636)) begin
            firstCode_21_fu_200 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_22_fu_204 <= firstCode_8_reload;
        end else if ((1'b1 == ap_condition_640)) begin
            firstCode_22_fu_204 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_23_fu_208 <= firstCode_9_reload;
        end else if ((1'b1 == ap_condition_644)) begin
            firstCode_23_fu_208 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_24_fu_212 <= firstCode_10_reload;
        end else if ((1'b1 == ap_condition_648)) begin
            firstCode_24_fu_212 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_25_fu_216 <= firstCode_11_reload;
        end else if ((1'b1 == ap_condition_652)) begin
            firstCode_25_fu_216 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_26_fu_220 <= firstCode_12_reload;
        end else if ((1'b1 == ap_condition_656)) begin
            firstCode_26_fu_220 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_27_fu_224 <= firstCode_13_reload;
        end else if ((1'b1 == ap_condition_660)) begin
            firstCode_27_fu_224 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_28_fu_228 <= firstCode_14_reload;
        end else if ((1'b1 == ap_condition_663)) begin
            firstCode_28_fu_228 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            firstCode_fu_176 <= firstCode_1_reload;
        end else if ((1'b1 == ap_condition_667)) begin
            firstCode_fu_176 <= firstCode_29_fu_924_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln794_fu_625_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_4_fu_168 <= i_5_fu_631_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_4_fu_168 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_1132 <= ap_sig_allocacmp_i;
    end
end

always @ (*) begin
    if (((icmp_ln794_fu_625_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 9'd0;
    end else begin
        ap_sig_allocacmp_i = i_4_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl10Codes_ce0 = 1'b1;
    end else begin
        bl10Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd10))) begin
        bl10Codes_we0 = 1'b1;
    end else begin
        bl10Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl11Codes_ce0 = 1'b1;
    end else begin
        bl11Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd11))) begin
        bl11Codes_we0 = 1'b1;
    end else begin
        bl11Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl12Codes_ce0 = 1'b1;
    end else begin
        bl12Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd12))) begin
        bl12Codes_we0 = 1'b1;
    end else begin
        bl12Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl13Codes_ce0 = 1'b1;
    end else begin
        bl13Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd13))) begin
        bl13Codes_we0 = 1'b1;
    end else begin
        bl13Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl14Codes_ce0 = 1'b1;
    end else begin
        bl14Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd14))) begin
        bl14Codes_we0 = 1'b1;
    end else begin
        bl14Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl15Codes_ce0 = 1'b1;
    end else begin
        bl15Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd15))) begin
        bl15Codes_we0 = 1'b1;
    end else begin
        bl15Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl1Codes_ce0 = 1'b1;
    end else begin
        bl1Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd1))) begin
        bl1Codes_we0 = 1'b1;
    end else begin
        bl1Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl2Codes_ce0 = 1'b1;
    end else begin
        bl2Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd2))) begin
        bl2Codes_we0 = 1'b1;
    end else begin
        bl2Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl3Codes_ce0 = 1'b1;
    end else begin
        bl3Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd3))) begin
        bl3Codes_we0 = 1'b1;
    end else begin
        bl3Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl4Codes_ce0 = 1'b1;
    end else begin
        bl4Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd4))) begin
        bl4Codes_we0 = 1'b1;
    end else begin
        bl4Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl5Codes_ce0 = 1'b1;
    end else begin
        bl5Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd5))) begin
        bl5Codes_we0 = 1'b1;
    end else begin
        bl5Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl6Codes_ce0 = 1'b1;
    end else begin
        bl6Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd6))) begin
        bl6Codes_we0 = 1'b1;
    end else begin
        bl6Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl7Codes_ce0 = 1'b1;
    end else begin
        bl7Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd7))) begin
        bl7Codes_we0 = 1'b1;
    end else begin
        bl7Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl8Codes_ce0 = 1'b1;
    end else begin
        bl8Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd8))) begin
        bl8Codes_we0 = 1'b1;
    end else begin
        bl8Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bl9Codes_ce0 = 1'b1;
    end else begin
        bl9Codes_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln797_fu_653_p2 == 1'd0) & (lens_q0 == 5'd9))) begin
        bl9Codes_we0 = 1'b1;
    end else begin
        bl9Codes_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lens_ce0 = 1'b1;
    end else begin
        lens_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln796_fu_637_p2 = (ap_sig_allocacmp_i + idx);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_612 = ((trunc_ln798_fu_659_p1 == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_616 = ((trunc_ln798_fu_659_p1 == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_620 = ((trunc_ln798_fu_659_p1 == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_624 = ((trunc_ln798_fu_659_p1 == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_628 = ((trunc_ln798_fu_659_p1 == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_632 = ((trunc_ln798_fu_659_p1 == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_636 = ((trunc_ln798_fu_659_p1 == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_640 = ((trunc_ln798_fu_659_p1 == 4'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_644 = ((trunc_ln798_fu_659_p1 == 4'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_648 = ((trunc_ln798_fu_659_p1 == 4'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_652 = ((trunc_ln798_fu_659_p1 == 4'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_656 = ((trunc_ln798_fu_659_p1 == 4'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_660 = ((trunc_ln798_fu_659_p1 == 4'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_663 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((trunc_ln798_fu_659_p1 == 4'd0) & (icmp_ln797_fu_653_p2 == 1'd0)) | ((trunc_ln798_fu_659_p1 == 4'd15) & (icmp_ln797_fu_653_p2 == 1'd0))));
end

always @ (*) begin
    ap_condition_667 = ((trunc_ln798_fu_659_p1 == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln797_fu_653_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bl10Codes_address0 = zext_ln827_fu_730_p1;

assign bl10Codes_d0 = i_reg_1132;

assign bl11Codes_address0 = zext_ln830_fu_718_p1;

assign bl11Codes_d0 = i_reg_1132;

assign bl12Codes_address0 = zext_ln833_fu_706_p1;

assign bl12Codes_d0 = i_reg_1132;

assign bl13Codes_address0 = zext_ln836_fu_694_p1;

assign bl13Codes_d0 = i_reg_1132;

assign bl14Codes_address0 = zext_ln839_fu_682_p1;

assign bl14Codes_d0 = i_reg_1132;

assign bl15Codes_address0 = zext_ln842_fu_670_p1;

assign bl15Codes_d0 = i_reg_1132;

assign bl1Codes_address0 = zext_ln800_fu_806_p1;

assign bl1Codes_d0 = i_reg_1132;

assign bl2Codes_address0 = zext_ln803_fu_798_p1;

assign bl2Codes_d0 = i_reg_1132;

assign bl3Codes_address0 = zext_ln806_fu_790_p1;

assign bl3Codes_d0 = i_reg_1132;

assign bl4Codes_address0 = zext_ln809_fu_782_p1;

assign bl4Codes_d0 = i_reg_1132;

assign bl5Codes_address0 = zext_ln812_fu_774_p1;

assign bl5Codes_d0 = i_reg_1132;

assign bl6Codes_address0 = zext_ln815_fu_766_p1;

assign bl6Codes_d0 = i_reg_1132;

assign bl7Codes_address0 = zext_ln818_fu_758_p1;

assign bl7Codes_d0 = i_reg_1132;

assign bl8Codes_address0 = zext_ln821_fu_750_p1;

assign bl8Codes_d0 = i_reg_1132;

assign bl9Codes_address0 = zext_ln824_fu_742_p1;

assign bl9Codes_d0 = i_reg_1132;

assign firstCode_29_fu_924_p2 = (tmp_14_fu_856_p33 + 15'd1);

assign i_5_fu_631_p2 = (ap_sig_allocacmp_i + 9'd1);

assign icmp_ln794_fu_625_p2 = ((ap_sig_allocacmp_i == codes_val) ? 1'b1 : 1'b0);

assign icmp_ln797_fu_653_p2 = ((lens_q0 == 5'd0) ? 1'b1 : 1'b0);

assign lens_address0 = zext_ln796_fu_643_p1;

assign tmp_14_fu_856_p31 = 'bx;

assign tmp_14_fu_856_p32 = lens_q0[3:0];

assign trunc_ln798_fu_659_p1 = lens_q0[3:0];

assign trunc_ln824_fu_738_p1 = firstCode_22_fu_204[7:0];

assign trunc_ln827_fu_726_p1 = firstCode_23_fu_208[7:0];

assign trunc_ln830_fu_714_p1 = firstCode_24_fu_212[7:0];

assign trunc_ln833_fu_702_p1 = firstCode_25_fu_216[7:0];

assign trunc_ln836_fu_690_p1 = firstCode_26_fu_220[7:0];

assign trunc_ln839_fu_678_p1 = firstCode_27_fu_224[7:0];

assign trunc_ln842_fu_666_p1 = firstCode_28_fu_228[7:0];

assign zext_ln796_fu_643_p1 = add_ln796_fu_637_p2;

assign zext_ln800_fu_806_p1 = firstCode_15_fu_172;

assign zext_ln803_fu_798_p1 = firstCode_fu_176;

assign zext_ln806_fu_790_p1 = firstCode_16_fu_180;

assign zext_ln809_fu_782_p1 = firstCode_17_fu_184;

assign zext_ln812_fu_774_p1 = firstCode_18_fu_188;

assign zext_ln815_fu_766_p1 = firstCode_19_fu_192;

assign zext_ln818_fu_758_p1 = firstCode_20_fu_196;

assign zext_ln821_fu_750_p1 = firstCode_21_fu_200;

assign zext_ln824_fu_742_p1 = trunc_ln824_fu_738_p1;

assign zext_ln827_fu_730_p1 = trunc_ln827_fu_726_p1;

assign zext_ln830_fu_718_p1 = trunc_ln830_fu_714_p1;

assign zext_ln833_fu_706_p1 = trunc_ln833_fu_702_p1;

assign zext_ln836_fu_694_p1 = trunc_ln836_fu_690_p1;

assign zext_ln839_fu_682_p1 = trunc_ln839_fu_678_p1;

assign zext_ln842_fu_670_p1 = trunc_ln842_fu_666_p1;

endmodule //decompressor_kernel_code_generator_array_dyn_new_Pipeline_CodeGen
