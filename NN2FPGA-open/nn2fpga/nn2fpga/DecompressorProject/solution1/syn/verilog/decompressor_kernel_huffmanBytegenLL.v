// ==============================================================
// Generated by Vitis HLS v2022.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module decompressor_kernel_huffmanBytegenLL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_bitbuffer_read,
        bits_cntr_read,
        lz77_output_stream_din,
        lz77_output_stream_full_n,
        lz77_output_stream_write,
        huffman_eos_stream_dout,
        huffman_eos_stream_empty_n,
        huffman_eos_stream_read,
        huffman_input_stream_dout,
        huffman_input_stream_empty_n,
        huffman_input_stream_read,
        codeOffsets_0_address0,
        codeOffsets_0_ce0,
        codeOffsets_0_q0,
        codeOffsets_0_address1,
        codeOffsets_0_ce1,
        codeOffsets_0_q1,
        codeOffsets_1_address0,
        codeOffsets_1_ce0,
        codeOffsets_1_q0,
        codeOffsets_1_address1,
        codeOffsets_1_ce1,
        codeOffsets_1_q1,
        bl1Codes_0_address0,
        bl1Codes_0_ce0,
        bl1Codes_0_q0,
        bl1Codes_1_address0,
        bl1Codes_1_ce0,
        bl1Codes_1_q0,
        bl2Codes_0_address0,
        bl2Codes_0_ce0,
        bl2Codes_0_q0,
        bl2Codes_1_address0,
        bl2Codes_1_ce0,
        bl2Codes_1_q0,
        bl3Codes_0_address0,
        bl3Codes_0_ce0,
        bl3Codes_0_q0,
        bl3Codes_1_address0,
        bl3Codes_1_ce0,
        bl3Codes_1_q0,
        bl4Codes_0_address0,
        bl4Codes_0_ce0,
        bl4Codes_0_q0,
        bl4Codes_1_address0,
        bl4Codes_1_ce0,
        bl4Codes_1_q0,
        bl5Codes_0_address0,
        bl5Codes_0_ce0,
        bl5Codes_0_q0,
        bl5Codes_1_address0,
        bl5Codes_1_ce0,
        bl5Codes_1_q0,
        bl6Codes_0_address0,
        bl6Codes_0_ce0,
        bl6Codes_0_q0,
        bl6Codes_1_address0,
        bl6Codes_1_ce0,
        bl6Codes_1_q0,
        bl7Codes_0_address0,
        bl7Codes_0_ce0,
        bl7Codes_0_q0,
        bl7Codes_1_address0,
        bl7Codes_1_ce0,
        bl7Codes_1_q0,
        bl8Codes_0_address0,
        bl8Codes_0_ce0,
        bl8Codes_0_q0,
        bl8Codes_1_address0,
        bl8Codes_1_ce0,
        bl8Codes_1_q0,
        bl9Codes_0_address0,
        bl9Codes_0_ce0,
        bl9Codes_0_q0,
        bl9Codes_1_address0,
        bl9Codes_1_ce0,
        bl9Codes_1_q0,
        bl10Codes_0_address0,
        bl10Codes_0_ce0,
        bl10Codes_0_q0,
        bl10Codes_1_address0,
        bl10Codes_1_ce0,
        bl10Codes_1_q0,
        bl11Codes_0_address0,
        bl11Codes_0_ce0,
        bl11Codes_0_q0,
        bl11Codes_1_address0,
        bl11Codes_1_ce0,
        bl11Codes_1_q0,
        bl12Codes_0_address0,
        bl12Codes_0_ce0,
        bl12Codes_0_q0,
        bl12Codes_1_address0,
        bl12Codes_1_ce0,
        bl12Codes_1_q0,
        bl13Codes_0_address0,
        bl13Codes_0_ce0,
        bl13Codes_0_q0,
        bl13Codes_1_address0,
        bl13Codes_1_ce0,
        bl13Codes_1_q0,
        bl14Codes_0_address0,
        bl14Codes_0_ce0,
        bl14Codes_0_q0,
        bl14Codes_1_address0,
        bl14Codes_1_ce0,
        bl14Codes_1_q0,
        bl15Codes_0_address0,
        bl15Codes_0_ce0,
        bl15Codes_0_q0,
        bl15Codes_1_address0,
        bl15Codes_1_ce0,
        bl15Codes_1_q0,
        p_read2,
        ignoreValue,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_bitbuffer_read;
input  [5:0] bits_cntr_read;
output  [15:0] lz77_output_stream_din;
input   lz77_output_stream_full_n;
output   lz77_output_stream_write;
input  [0:0] huffman_eos_stream_dout;
input   huffman_eos_stream_empty_n;
output   huffman_eos_stream_read;
input  [15:0] huffman_input_stream_dout;
input   huffman_input_stream_empty_n;
output   huffman_input_stream_read;
output  [3:0] codeOffsets_0_address0;
output   codeOffsets_0_ce0;
input  [15:0] codeOffsets_0_q0;
output  [3:0] codeOffsets_0_address1;
output   codeOffsets_0_ce1;
input  [15:0] codeOffsets_0_q1;
output  [3:0] codeOffsets_1_address0;
output   codeOffsets_1_ce0;
input  [15:0] codeOffsets_1_q0;
output  [3:0] codeOffsets_1_address1;
output   codeOffsets_1_ce1;
input  [15:0] codeOffsets_1_q1;
output  [0:0] bl1Codes_0_address0;
output   bl1Codes_0_ce0;
input  [8:0] bl1Codes_0_q0;
output  [0:0] bl1Codes_1_address0;
output   bl1Codes_1_ce0;
input  [8:0] bl1Codes_1_q0;
output  [1:0] bl2Codes_0_address0;
output   bl2Codes_0_ce0;
input  [8:0] bl2Codes_0_q0;
output  [1:0] bl2Codes_1_address0;
output   bl2Codes_1_ce0;
input  [8:0] bl2Codes_1_q0;
output  [2:0] bl3Codes_0_address0;
output   bl3Codes_0_ce0;
input  [8:0] bl3Codes_0_q0;
output  [2:0] bl3Codes_1_address0;
output   bl3Codes_1_ce0;
input  [8:0] bl3Codes_1_q0;
output  [3:0] bl4Codes_0_address0;
output   bl4Codes_0_ce0;
input  [8:0] bl4Codes_0_q0;
output  [3:0] bl4Codes_1_address0;
output   bl4Codes_1_ce0;
input  [8:0] bl4Codes_1_q0;
output  [4:0] bl5Codes_0_address0;
output   bl5Codes_0_ce0;
input  [8:0] bl5Codes_0_q0;
output  [4:0] bl5Codes_1_address0;
output   bl5Codes_1_ce0;
input  [8:0] bl5Codes_1_q0;
output  [5:0] bl6Codes_0_address0;
output   bl6Codes_0_ce0;
input  [8:0] bl6Codes_0_q0;
output  [5:0] bl6Codes_1_address0;
output   bl6Codes_1_ce0;
input  [8:0] bl6Codes_1_q0;
output  [6:0] bl7Codes_0_address0;
output   bl7Codes_0_ce0;
input  [8:0] bl7Codes_0_q0;
output  [6:0] bl7Codes_1_address0;
output   bl7Codes_1_ce0;
input  [8:0] bl7Codes_1_q0;
output  [7:0] bl8Codes_0_address0;
output   bl8Codes_0_ce0;
input  [8:0] bl8Codes_0_q0;
output  [7:0] bl8Codes_1_address0;
output   bl8Codes_1_ce0;
input  [8:0] bl8Codes_1_q0;
output  [7:0] bl9Codes_0_address0;
output   bl9Codes_0_ce0;
input  [8:0] bl9Codes_0_q0;
output  [7:0] bl9Codes_1_address0;
output   bl9Codes_1_ce0;
input  [8:0] bl9Codes_1_q0;
output  [7:0] bl10Codes_0_address0;
output   bl10Codes_0_ce0;
input  [8:0] bl10Codes_0_q0;
output  [7:0] bl10Codes_1_address0;
output   bl10Codes_1_ce0;
input  [8:0] bl10Codes_1_q0;
output  [7:0] bl11Codes_0_address0;
output   bl11Codes_0_ce0;
input  [8:0] bl11Codes_0_q0;
output  [7:0] bl11Codes_1_address0;
output   bl11Codes_1_ce0;
input  [8:0] bl11Codes_1_q0;
output  [7:0] bl12Codes_0_address0;
output   bl12Codes_0_ce0;
input  [8:0] bl12Codes_0_q0;
output  [7:0] bl12Codes_1_address0;
output   bl12Codes_1_ce0;
input  [8:0] bl12Codes_1_q0;
output  [7:0] bl13Codes_0_address0;
output   bl13Codes_0_ce0;
input  [8:0] bl13Codes_0_q0;
output  [7:0] bl13Codes_1_address0;
output   bl13Codes_1_ce0;
input  [8:0] bl13Codes_1_q0;
output  [7:0] bl14Codes_0_address0;
output   bl14Codes_0_ce0;
input  [8:0] bl14Codes_0_q0;
output  [7:0] bl14Codes_1_address0;
output   bl14Codes_1_ce0;
input  [8:0] bl14Codes_1_q0;
output  [7:0] bl15Codes_0_address0;
output   bl15Codes_0_ce0;
input  [8:0] bl15Codes_0_q0;
output  [7:0] bl15Codes_1_address0;
output   bl15Codes_1_ce0;
input  [8:0] bl15Codes_1_q0;
input  [0:0] p_read2;
input  [2:0] ignoreValue;
output  [0:0] ap_return_0;
output  [31:0] ap_return_1;
output  [5:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg lz77_output_stream_write;
reg huffman_eos_stream_read;
reg huffman_input_stream_read;
reg[3:0] codeOffsets_0_address0;
reg codeOffsets_0_ce0;
reg[3:0] codeOffsets_0_address1;
reg codeOffsets_0_ce1;
reg[3:0] codeOffsets_1_address0;
reg codeOffsets_1_ce0;
reg[3:0] codeOffsets_1_address1;
reg codeOffsets_1_ce1;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] codeOffsets_0_load_reg_638;
wire    ap_CS_fsm_state2;
reg   [15:0] codeOffsets_1_load_reg_663;
reg   [15:0] codeOffsets_0_load_1_reg_668;
wire    ap_CS_fsm_state3;
reg   [15:0] codeOffsets_0_load_2_reg_673;
reg   [15:0] codeOffsets_1_load_1_reg_698;
reg   [15:0] codeOffsets_1_load_2_reg_703;
reg   [15:0] codeOffsets_0_load_3_reg_708;
wire    ap_CS_fsm_state4;
reg   [15:0] codeOffsets_0_load_4_reg_713;
reg   [15:0] codeOffsets_1_load_3_reg_738;
reg   [15:0] codeOffsets_1_load_4_reg_743;
reg   [15:0] codeOffsets_0_load_5_reg_748;
wire    ap_CS_fsm_state5;
reg   [15:0] codeOffsets_0_load_6_reg_753;
reg   [15:0] codeOffsets_1_load_5_reg_778;
reg   [15:0] codeOffsets_1_load_6_reg_783;
reg   [15:0] codeOffsets_0_load_7_reg_788;
wire    ap_CS_fsm_state6;
reg   [15:0] codeOffsets_0_load_8_reg_793;
reg   [15:0] codeOffsets_1_load_7_reg_818;
reg   [15:0] codeOffsets_1_load_8_reg_823;
reg   [15:0] codeOffsets_0_load_9_reg_828;
wire    ap_CS_fsm_state7;
reg   [15:0] codeOffsets_0_load_10_reg_833;
reg   [15:0] codeOffsets_1_load_9_reg_858;
reg   [15:0] codeOffsets_1_load_10_reg_863;
wire    ap_CS_fsm_state8;
reg   [15:0] codeOffsets_0_load_11_reg_888;
reg   [15:0] codeOffsets_0_load_12_reg_893;
reg   [15:0] codeOffsets_1_load_11_reg_918;
reg   [15:0] codeOffsets_1_load_12_reg_923;
reg   [15:0] codeOffsets_0_load_13_reg_928;
wire    ap_CS_fsm_state9;
reg   [15:0] codeOffsets_0_load_14_reg_933;
reg   [15:0] codeOffsets_1_load_13_reg_938;
reg   [15:0] codeOffsets_1_load_14_reg_943;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_done;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_idle;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_ready;
wire   [15:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_lz77_output_stream_din;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_lz77_output_stream_write;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_huffman_input_stream_read;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_huffman_eos_stream_read;
wire   [0:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_0_ce0;
wire   [0:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_1_ce0;
wire   [1:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_0_ce0;
wire   [1:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_1_ce0;
wire   [2:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_0_ce0;
wire   [2:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_1_ce0;
wire   [3:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_0_ce0;
wire   [3:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_1_ce0;
wire   [4:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_0_ce0;
wire   [4:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_1_ce0;
wire   [5:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_0_ce0;
wire   [5:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_1_ce0;
wire   [6:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_0_ce0;
wire   [6:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_1_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_0_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_0_ce0;
wire   [7:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_1_address0;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_1_ce0;
wire   [0:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_done_0_out;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_done_0_out_ap_vld;
wire   [31:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_buffer_out;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_buffer_out_ap_vld;
wire   [5:0] grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_counter_out;
wire    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_counter_out_ap_vld;
reg    grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start_reg = 1'b0;
end

decompressor_kernel_huffmanBytegenLL_Pipeline_ByteGen grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start),
    .ap_done(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_done),
    .ap_idle(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_idle),
    .ap_ready(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_ready),
    .lz77_output_stream_din(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_lz77_output_stream_din),
    .lz77_output_stream_full_n(lz77_output_stream_full_n),
    .lz77_output_stream_write(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_lz77_output_stream_write),
    .huffman_input_stream_dout(huffman_input_stream_dout),
    .huffman_input_stream_empty_n(huffman_input_stream_empty_n),
    .huffman_input_stream_read(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_huffman_input_stream_read),
    .huffman_eos_stream_dout(huffman_eos_stream_dout),
    .huffman_eos_stream_empty_n(huffman_eos_stream_empty_n),
    .huffman_eos_stream_read(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_huffman_eos_stream_read),
    .p_read2(p_read2),
    .p_bitbuffer_read(p_bitbuffer_read),
    .bits_cntr_read(bits_cntr_read),
    .codeOffsets_0_load(codeOffsets_0_load_reg_638),
    .codeOffsets_0_load_1(codeOffsets_0_load_1_reg_668),
    .codeOffsets_0_load_2(codeOffsets_0_load_2_reg_673),
    .codeOffsets_0_load_3(codeOffsets_0_load_3_reg_708),
    .codeOffsets_0_load_4(codeOffsets_0_load_4_reg_713),
    .codeOffsets_0_load_5(codeOffsets_0_load_5_reg_748),
    .codeOffsets_0_load_6(codeOffsets_0_load_6_reg_753),
    .codeOffsets_0_load_7(codeOffsets_0_load_7_reg_788),
    .codeOffsets_0_load_8(codeOffsets_0_load_8_reg_793),
    .codeOffsets_0_load_9(codeOffsets_0_load_9_reg_828),
    .codeOffsets_0_load_10(codeOffsets_0_load_10_reg_833),
    .codeOffsets_0_load_11(codeOffsets_0_load_11_reg_888),
    .codeOffsets_0_load_12(codeOffsets_0_load_12_reg_893),
    .codeOffsets_0_load_13(codeOffsets_0_load_13_reg_928),
    .codeOffsets_0_load_14(codeOffsets_0_load_14_reg_933),
    .codeOffsets_1_load(codeOffsets_1_load_reg_663),
    .codeOffsets_1_load_1(codeOffsets_1_load_1_reg_698),
    .codeOffsets_1_load_2(codeOffsets_1_load_2_reg_703),
    .codeOffsets_1_load_3(codeOffsets_1_load_3_reg_738),
    .codeOffsets_1_load_4(codeOffsets_1_load_4_reg_743),
    .codeOffsets_1_load_5(codeOffsets_1_load_5_reg_778),
    .codeOffsets_1_load_6(codeOffsets_1_load_6_reg_783),
    .codeOffsets_1_load_7(codeOffsets_1_load_7_reg_818),
    .codeOffsets_1_load_8(codeOffsets_1_load_8_reg_823),
    .codeOffsets_1_load_9(codeOffsets_1_load_9_reg_858),
    .codeOffsets_1_load_10(codeOffsets_1_load_10_reg_863),
    .codeOffsets_1_load_11(codeOffsets_1_load_11_reg_918),
    .codeOffsets_1_load_12(codeOffsets_1_load_12_reg_923),
    .codeOffsets_1_load_13(codeOffsets_1_load_13_reg_938),
    .codeOffsets_1_load_14(codeOffsets_1_load_14_reg_943),
    .bl1Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_0_address0),
    .bl1Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_0_ce0),
    .bl1Codes_0_q0(bl1Codes_0_q0),
    .bl1Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_1_address0),
    .bl1Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_1_ce0),
    .bl1Codes_1_q0(bl1Codes_1_q0),
    .bl2Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_0_address0),
    .bl2Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_0_ce0),
    .bl2Codes_0_q0(bl2Codes_0_q0),
    .bl2Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_1_address0),
    .bl2Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_1_ce0),
    .bl2Codes_1_q0(bl2Codes_1_q0),
    .bl3Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_0_address0),
    .bl3Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_0_ce0),
    .bl3Codes_0_q0(bl3Codes_0_q0),
    .bl3Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_1_address0),
    .bl3Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_1_ce0),
    .bl3Codes_1_q0(bl3Codes_1_q0),
    .bl4Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_0_address0),
    .bl4Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_0_ce0),
    .bl4Codes_0_q0(bl4Codes_0_q0),
    .bl4Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_1_address0),
    .bl4Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_1_ce0),
    .bl4Codes_1_q0(bl4Codes_1_q0),
    .bl5Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_0_address0),
    .bl5Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_0_ce0),
    .bl5Codes_0_q0(bl5Codes_0_q0),
    .bl5Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_1_address0),
    .bl5Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_1_ce0),
    .bl5Codes_1_q0(bl5Codes_1_q0),
    .bl6Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_0_address0),
    .bl6Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_0_ce0),
    .bl6Codes_0_q0(bl6Codes_0_q0),
    .bl6Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_1_address0),
    .bl6Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_1_ce0),
    .bl6Codes_1_q0(bl6Codes_1_q0),
    .bl7Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_0_address0),
    .bl7Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_0_ce0),
    .bl7Codes_0_q0(bl7Codes_0_q0),
    .bl7Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_1_address0),
    .bl7Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_1_ce0),
    .bl7Codes_1_q0(bl7Codes_1_q0),
    .bl8Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_0_address0),
    .bl8Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_0_ce0),
    .bl8Codes_0_q0(bl8Codes_0_q0),
    .bl8Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_1_address0),
    .bl8Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_1_ce0),
    .bl8Codes_1_q0(bl8Codes_1_q0),
    .bl9Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_0_address0),
    .bl9Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_0_ce0),
    .bl9Codes_0_q0(bl9Codes_0_q0),
    .bl9Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_1_address0),
    .bl9Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_1_ce0),
    .bl9Codes_1_q0(bl9Codes_1_q0),
    .bl10Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_0_address0),
    .bl10Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_0_ce0),
    .bl10Codes_0_q0(bl10Codes_0_q0),
    .bl10Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_1_address0),
    .bl10Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_1_ce0),
    .bl10Codes_1_q0(bl10Codes_1_q0),
    .bl11Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_0_address0),
    .bl11Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_0_ce0),
    .bl11Codes_0_q0(bl11Codes_0_q0),
    .bl11Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_1_address0),
    .bl11Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_1_ce0),
    .bl11Codes_1_q0(bl11Codes_1_q0),
    .bl12Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_0_address0),
    .bl12Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_0_ce0),
    .bl12Codes_0_q0(bl12Codes_0_q0),
    .bl12Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_1_address0),
    .bl12Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_1_ce0),
    .bl12Codes_1_q0(bl12Codes_1_q0),
    .bl13Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_0_address0),
    .bl13Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_0_ce0),
    .bl13Codes_0_q0(bl13Codes_0_q0),
    .bl13Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_1_address0),
    .bl13Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_1_ce0),
    .bl13Codes_1_q0(bl13Codes_1_q0),
    .bl14Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_0_address0),
    .bl14Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_0_ce0),
    .bl14Codes_0_q0(bl14Codes_0_q0),
    .bl14Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_1_address0),
    .bl14Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_1_ce0),
    .bl14Codes_1_q0(bl14Codes_1_q0),
    .bl15Codes_0_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_0_address0),
    .bl15Codes_0_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_0_ce0),
    .bl15Codes_0_q0(bl15Codes_0_q0),
    .bl15Codes_1_address0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_1_address0),
    .bl15Codes_1_ce0(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_1_ce0),
    .bl15Codes_1_q0(bl15Codes_1_q0),
    .ignoreValue_cast(ignoreValue),
    .done_0_out(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_done_0_out),
    .done_0_out_ap_vld(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_done_0_out_ap_vld),
    .buffer_out(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_buffer_out),
    .buffer_out_ap_vld(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_buffer_out_ap_vld),
    .counter_out(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_counter_out),
    .counter_out_ap_vld(grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_counter_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start_reg <= 1'b1;
        end else if ((grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_ready == 1'b1)) begin
            grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        codeOffsets_0_load_10_reg_833 <= codeOffsets_0_q1;
        codeOffsets_0_load_9_reg_828 <= codeOffsets_0_q0;
        codeOffsets_1_load_10_reg_863 <= codeOffsets_1_q1;
        codeOffsets_1_load_9_reg_858 <= codeOffsets_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        codeOffsets_0_load_11_reg_888 <= codeOffsets_0_q0;
        codeOffsets_0_load_12_reg_893 <= codeOffsets_0_q1;
        codeOffsets_1_load_11_reg_918 <= codeOffsets_1_q0;
        codeOffsets_1_load_12_reg_923 <= codeOffsets_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        codeOffsets_0_load_13_reg_928 <= codeOffsets_0_q0;
        codeOffsets_0_load_14_reg_933 <= codeOffsets_0_q1;
        codeOffsets_1_load_13_reg_938 <= codeOffsets_1_q0;
        codeOffsets_1_load_14_reg_943 <= codeOffsets_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        codeOffsets_0_load_1_reg_668 <= codeOffsets_0_q1;
        codeOffsets_0_load_2_reg_673 <= codeOffsets_0_q0;
        codeOffsets_1_load_1_reg_698 <= codeOffsets_1_q1;
        codeOffsets_1_load_2_reg_703 <= codeOffsets_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        codeOffsets_0_load_3_reg_708 <= codeOffsets_0_q0;
        codeOffsets_0_load_4_reg_713 <= codeOffsets_0_q1;
        codeOffsets_1_load_3_reg_738 <= codeOffsets_1_q0;
        codeOffsets_1_load_4_reg_743 <= codeOffsets_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        codeOffsets_0_load_5_reg_748 <= codeOffsets_0_q0;
        codeOffsets_0_load_6_reg_753 <= codeOffsets_0_q1;
        codeOffsets_1_load_5_reg_778 <= codeOffsets_1_q0;
        codeOffsets_1_load_6_reg_783 <= codeOffsets_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        codeOffsets_0_load_7_reg_788 <= codeOffsets_0_q0;
        codeOffsets_0_load_8_reg_793 <= codeOffsets_0_q1;
        codeOffsets_1_load_7_reg_818 <= codeOffsets_1_q0;
        codeOffsets_1_load_8_reg_823 <= codeOffsets_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        codeOffsets_0_load_reg_638 <= codeOffsets_0_q0;
        codeOffsets_1_load_reg_663 <= codeOffsets_1_q0;
    end
end

always @ (*) begin
    if ((grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        codeOffsets_0_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        codeOffsets_0_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        codeOffsets_0_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        codeOffsets_0_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        codeOffsets_0_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        codeOffsets_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        codeOffsets_0_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        codeOffsets_0_address0 = 64'd0;
    end else begin
        codeOffsets_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        codeOffsets_0_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        codeOffsets_0_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        codeOffsets_0_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        codeOffsets_0_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        codeOffsets_0_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        codeOffsets_0_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        codeOffsets_0_address1 = 64'd1;
    end else begin
        codeOffsets_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        codeOffsets_0_ce0 = 1'b1;
    end else begin
        codeOffsets_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        codeOffsets_0_ce1 = 1'b1;
    end else begin
        codeOffsets_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        codeOffsets_1_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        codeOffsets_1_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        codeOffsets_1_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        codeOffsets_1_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        codeOffsets_1_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        codeOffsets_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        codeOffsets_1_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        codeOffsets_1_address0 = 64'd0;
    end else begin
        codeOffsets_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        codeOffsets_1_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        codeOffsets_1_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        codeOffsets_1_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        codeOffsets_1_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        codeOffsets_1_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        codeOffsets_1_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        codeOffsets_1_address1 = 64'd1;
    end else begin
        codeOffsets_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        codeOffsets_1_ce0 = 1'b1;
    end else begin
        codeOffsets_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        codeOffsets_1_ce1 = 1'b1;
    end else begin
        codeOffsets_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        huffman_eos_stream_read = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_huffman_eos_stream_read;
    end else begin
        huffman_eos_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        huffman_input_stream_read = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_huffman_input_stream_read;
    end else begin
        huffman_input_stream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        lz77_output_stream_write = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_lz77_output_stream_write;
    end else begin
        lz77_output_stream_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return_0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_done_0_out;

assign ap_return_1 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_buffer_out;

assign ap_return_2 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_counter_out;

assign bl10Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_0_address0;

assign bl10Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_0_ce0;

assign bl10Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_1_address0;

assign bl10Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl10Codes_1_ce0;

assign bl11Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_0_address0;

assign bl11Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_0_ce0;

assign bl11Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_1_address0;

assign bl11Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl11Codes_1_ce0;

assign bl12Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_0_address0;

assign bl12Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_0_ce0;

assign bl12Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_1_address0;

assign bl12Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl12Codes_1_ce0;

assign bl13Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_0_address0;

assign bl13Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_0_ce0;

assign bl13Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_1_address0;

assign bl13Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl13Codes_1_ce0;

assign bl14Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_0_address0;

assign bl14Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_0_ce0;

assign bl14Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_1_address0;

assign bl14Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl14Codes_1_ce0;

assign bl15Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_0_address0;

assign bl15Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_0_ce0;

assign bl15Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_1_address0;

assign bl15Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl15Codes_1_ce0;

assign bl1Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_0_address0;

assign bl1Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_0_ce0;

assign bl1Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_1_address0;

assign bl1Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl1Codes_1_ce0;

assign bl2Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_0_address0;

assign bl2Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_0_ce0;

assign bl2Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_1_address0;

assign bl2Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl2Codes_1_ce0;

assign bl3Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_0_address0;

assign bl3Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_0_ce0;

assign bl3Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_1_address0;

assign bl3Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl3Codes_1_ce0;

assign bl4Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_0_address0;

assign bl4Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_0_ce0;

assign bl4Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_1_address0;

assign bl4Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl4Codes_1_ce0;

assign bl5Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_0_address0;

assign bl5Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_0_ce0;

assign bl5Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_1_address0;

assign bl5Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl5Codes_1_ce0;

assign bl6Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_0_address0;

assign bl6Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_0_ce0;

assign bl6Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_1_address0;

assign bl6Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl6Codes_1_ce0;

assign bl7Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_0_address0;

assign bl7Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_0_ce0;

assign bl7Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_1_address0;

assign bl7Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl7Codes_1_ce0;

assign bl8Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_0_address0;

assign bl8Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_0_ce0;

assign bl8Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_1_address0;

assign bl8Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl8Codes_1_ce0;

assign bl9Codes_0_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_0_address0;

assign bl9Codes_0_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_0_ce0;

assign bl9Codes_1_address0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_1_address0;

assign bl9Codes_1_ce0 = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_bl9Codes_1_ce0;

assign grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_ap_start_reg;

assign lz77_output_stream_din = grp_huffmanBytegenLL_Pipeline_ByteGen_fu_468_lz77_output_stream_din;

endmodule //decompressor_kernel_huffmanBytegenLL
