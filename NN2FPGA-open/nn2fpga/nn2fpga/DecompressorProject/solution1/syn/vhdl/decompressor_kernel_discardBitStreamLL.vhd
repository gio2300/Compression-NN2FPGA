-- ==============================================================
-- Generated by Vitis HLS v2022.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decompressor_kernel_discardBitStreamLL is
port (
    ap_ready : OUT STD_LOGIC;
    bitbuffer_read : IN STD_LOGIC_VECTOR (31 downto 0);
    bits_cntr_read : IN STD_LOGIC_VECTOR (5 downto 0);
    n_bits_val : IN STD_LOGIC_VECTOR (4 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (5 downto 0) );
end;


architecture behav of decompressor_kernel_discardBitStreamLL is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal zext_ln73_fu_36_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_bits_val_cast_fu_32_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln73_fu_40_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln74_fu_46_p2 : STD_LOGIC_VECTOR (5 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= lshr_ln73_fu_40_p2;
    ap_return_1 <= sub_ln74_fu_46_p2;
    lshr_ln73_fu_40_p2 <= std_logic_vector(shift_right(unsigned(bitbuffer_read),to_integer(unsigned('0' & zext_ln73_fu_36_p1(31-1 downto 0)))));
    n_bits_val_cast_fu_32_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_bits_val),6));
    sub_ln74_fu_46_p2 <= std_logic_vector(unsigned(bits_cntr_read) - unsigned(n_bits_val_cast_fu_32_p1));
    zext_ln73_fu_36_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_bits_val),32));
end behav;
