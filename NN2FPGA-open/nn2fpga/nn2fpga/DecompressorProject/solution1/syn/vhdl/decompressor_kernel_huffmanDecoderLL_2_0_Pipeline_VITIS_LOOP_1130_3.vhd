-- ==============================================================
-- Generated by Vitis HLS v2022.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity decompressor_kernel_huffmanDecoderLL_2_0_Pipeline_VITIS_LOOP_1130_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bl8Code_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bl8Code_ce0 : OUT STD_LOGIC;
    bl8Code_we0 : OUT STD_LOGIC;
    bl8Code_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    codeOffsets_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    codeOffsets_ce0 : OUT STD_LOGIC;
    codeOffsets_we0 : OUT STD_LOGIC;
    codeOffsets_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    codeOffsets_1_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    codeOffsets_1_ce0 : OUT STD_LOGIC;
    codeOffsets_1_we0 : OUT STD_LOGIC;
    codeOffsets_1_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    bl9Code_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    bl9Code_ce0 : OUT STD_LOGIC;
    bl9Code_we0 : OUT STD_LOGIC;
    bl9Code_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    bl7Code_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    bl7Code_ce0 : OUT STD_LOGIC;
    bl7Code_we0 : OUT STD_LOGIC;
    bl7Code_d0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    bl5Code_1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    bl5Code_1_ce0 : OUT STD_LOGIC;
    bl5Code_1_we0 : OUT STD_LOGIC;
    bl5Code_1_d0 : OUT STD_LOGIC_VECTOR (8 downto 0) );
end;


architecture behav of decompressor_kernel_huffmanDecoderLL_2_0_Pipeline_VITIS_LOOP_1130_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv9_6 : STD_LOGIC_VECTOR (8 downto 0) := "000000110";
    constant ap_const_lv9_7 : STD_LOGIC_VECTOR (8 downto 0) := "000000111";
    constant ap_const_lv9_8 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv15_190 : STD_LOGIC_VECTOR (14 downto 0) := "000000110010000";
    constant ap_const_lv15_30 : STD_LOGIC_VECTOR (14 downto 0) := "000000000110000";
    constant ap_const_lv16_190 : STD_LOGIC_VECTOR (15 downto 0) := "0000000110010000";
    constant ap_const_lv16_30 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv9_120 : STD_LOGIC_VECTOR (8 downto 0) := "100100000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv9_F : STD_LOGIC_VECTOR (8 downto 0) := "000001111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_90 : STD_LOGIC_VECTOR (8 downto 0) := "010010000";
    constant ap_const_lv9_118 : STD_LOGIC_VECTOR (8 downto 0) := "100011000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1130_fu_308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln1130_fu_320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_3_load_fu_301_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln1145_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1151_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1158_fu_370_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1154_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_355_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1164_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1160_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln1161_fu_405_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln1155_fu_421_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_92 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    signal add_ln1130_fu_314_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal bit7_fu_96 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal bit7_1_fu_410_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal bit9_fu_100 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal bit9_1_fu_375_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal bit8_fu_104 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    signal grp_fu_275_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_333_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1158_fu_366_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_336 : BOOLEAN;
    signal ap_condition_341 : BOOLEAN;
    signal ap_condition_150 : BOOLEAN;
    signal ap_condition_170 : BOOLEAN;
    signal ap_condition_90 : BOOLEAN;
    signal ap_condition_353 : BOOLEAN;
    signal ap_condition_93 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component decompressor_kernel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component decompressor_kernel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter1_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    bit7_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    bit7_fu_96 <= ap_const_lv15_0;
                elsif ((ap_const_boolean_1 = ap_condition_336)) then 
                    bit7_fu_96 <= bit7_1_fu_410_p2;
                end if;
            end if; 
        end if;
    end process;

    bit8_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                bit8_fu_104 <= ap_const_lv15_30;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_1)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_8))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_7))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_6))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)))) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1160_fu_386_p2 = ap_const_lv1_0) and (tmp_2_fu_355_p3 = ap_const_lv1_1) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0)))) then 
                bit8_fu_104 <= grp_fu_275_p2;
            end if; 
        end if;
    end process;

    bit9_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    bit9_fu_100 <= ap_const_lv15_190;
                elsif ((ap_const_boolean_1 = ap_condition_341)) then 
                    bit9_fu_100 <= bit9_1_fu_375_p2;
                end if;
            end if; 
        end if;
    end process;

    i_fu_92_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_92 <= ap_const_lv9_0;
                elsif (((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    i_fu_92 <= add_ln1130_fu_314_p2;
                end if;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1130_fu_314_p2 <= std_logic_vector(unsigned(i_fu_92) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_150_assign_proc : process(icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3, icmp_ln1160_fu_386_p2)
    begin
                ap_condition_150 <= (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1160_fu_386_p2 = ap_const_lv1_0) and (tmp_2_fu_355_p3 = ap_const_lv1_1) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0));
    end process;


    ap_condition_170_assign_proc : process(icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2)
    begin
                ap_condition_170 <= (((((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_1)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_8))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_7))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_6))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)));
    end process;


    ap_condition_336_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3, icmp_ln1160_fu_386_p2)
    begin
                ap_condition_336 <= (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1160_fu_386_p2 = ap_const_lv1_1) and (tmp_2_fu_355_p3 = ap_const_lv1_1) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0));
    end process;


    ap_condition_341_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3)
    begin
                ap_condition_341 <= (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_2_fu_355_p3 = ap_const_lv1_0) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0));
    end process;


    ap_condition_353_assign_proc : process(i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2)
    begin
                ap_condition_353 <= (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1));
    end process;


    ap_condition_90_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_90 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_93_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, ap_block_pp0_stage0)
    begin
                ap_condition_93 <= ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_subdone, icmp_ln1130_fu_308_p2)
    begin
        if (((icmp_ln1130_fu_308_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter1_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bit7_1_fu_410_p2 <= std_logic_vector(unsigned(bit7_fu_96) + unsigned(ap_const_lv15_1));
    bit9_1_fu_375_p2 <= std_logic_vector(unsigned(bit9_fu_100) + unsigned(ap_const_lv15_1));
    bl5Code_1_address0 <= zext_ln1130_fu_320_p1(5 - 1 downto 0);

    bl5Code_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bl5Code_1_ce0 <= ap_const_logic_1;
        else 
            bl5Code_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bl5Code_1_d0 <= i_fu_92;

    bl5Code_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, icmp_ln1151_fu_343_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1151_fu_343_p2 = ap_const_lv1_1))) then 
            bl5Code_1_we0 <= ap_const_logic_1;
        else 
            bl5Code_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bl7Code_address0 <= zext_ln1161_fu_405_p1(7 - 1 downto 0);

    bl7Code_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bl7Code_ce0 <= ap_const_logic_1;
        else 
            bl7Code_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bl7Code_d0 <= i_fu_92;

    bl7Code_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3, icmp_ln1160_fu_386_p2, ap_block_pp0_stage0_11001)
    begin
        if ((not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1160_fu_386_p2 = ap_const_lv1_1) and (tmp_2_fu_355_p3 = ap_const_lv1_1) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0))) then 
            bl7Code_we0 <= ap_const_logic_1;
        else 
            bl7Code_we0 <= ap_const_logic_0;
        end if; 
    end process;


    bl8Code_address0_assign_proc : process(zext_ln1164_fu_392_p1, zext_ln1155_fu_421_p1, ap_condition_150, ap_condition_170, ap_condition_90)
    begin
        if ((ap_const_boolean_1 = ap_condition_90)) then
            if ((ap_const_boolean_1 = ap_condition_170)) then 
                bl8Code_address0 <= zext_ln1155_fu_421_p1(8 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_150)) then 
                bl8Code_address0 <= zext_ln1164_fu_392_p1(8 - 1 downto 0);
            else 
                bl8Code_address0 <= "XXXXXXXX";
            end if;
        else 
            bl8Code_address0 <= "XXXXXXXX";
        end if; 
    end process;


    bl8Code_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3, icmp_ln1160_fu_386_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_1)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_8))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_7))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_6))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)))) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1160_fu_386_p2 = ap_const_lv1_0) and (tmp_2_fu_355_p3 = ap_const_lv1_1) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0)))) then 
            bl8Code_ce0 <= ap_const_logic_1;
        else 
            bl8Code_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bl8Code_d0 <= i_fu_92;

    bl8Code_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3, icmp_ln1160_fu_386_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (((((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_1)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_8))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_7))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_6))) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)))) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) 
    and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1160_fu_386_p2 = ap_const_lv1_0) and (tmp_2_fu_355_p3 = ap_const_lv1_1) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0)))) then 
            bl8Code_we0 <= ap_const_logic_1;
        else 
            bl8Code_we0 <= ap_const_logic_0;
        end if; 
    end process;

    bl9Code_address0 <= zext_ln1158_fu_370_p1(8 - 1 downto 0);

    bl9Code_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            bl9Code_ce0 <= ap_const_logic_1;
        else 
            bl9Code_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    bl9Code_d0 <= i_fu_92;

    bl9Code_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, icmp_ln1154_fu_349_p2, tmp_2_fu_355_p3, ap_block_pp0_stage0_11001)
    begin
        if ((not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_2_fu_355_p3 = ap_const_lv1_0) and (icmp_ln1154_fu_349_p2 = ap_const_lv1_0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_0))) then 
            bl9Code_we0 <= ap_const_logic_1;
        else 
            bl9Code_we0 <= ap_const_logic_0;
        end if; 
    end process;


    codeOffsets_1_address0_assign_proc : process(zext_ln1130_fu_320_p1, i_3_load_fu_301_p1, ap_condition_353, ap_condition_93)
    begin
        if ((ap_const_boolean_1 = ap_condition_93)) then
            if ((ap_const_boolean_1 = ap_condition_353)) then 
                codeOffsets_1_address0 <= zext_ln1130_fu_320_p1(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_4)) then 
                codeOffsets_1_address0 <= ap_const_lv64_4(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_6)) then 
                codeOffsets_1_address0 <= ap_const_lv64_6(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_7)) then 
                codeOffsets_1_address0 <= ap_const_lv64_7(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_8)) then 
                codeOffsets_1_address0 <= ap_const_lv64_8(4 - 1 downto 0);
            else 
                codeOffsets_1_address0 <= "XXXX";
            end if;
        else 
            codeOffsets_1_address0 <= "XXXX";
        end if; 
    end process;


    codeOffsets_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_8)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_7)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_6)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) 
    and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1)))) then 
            codeOffsets_1_ce0 <= ap_const_logic_1;
        else 
            codeOffsets_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    codeOffsets_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, ap_block_pp0_stage0, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2)
    begin
        if (((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_4))) then 
            codeOffsets_1_d0 <= ap_const_lv16_0;
        elsif ((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_8)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_7)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_6)) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 
    = ap_CS_fsm_pp0_stage0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1)))) then 
            codeOffsets_1_d0 <= ap_const_lv16_FFFF;
        else 
            codeOffsets_1_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    codeOffsets_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_8)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_7)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_6)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) 
    and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1)))) then 
            codeOffsets_1_we0 <= ap_const_logic_1;
        else 
            codeOffsets_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    codeOffsets_address0_assign_proc : process(zext_ln1130_fu_320_p1, i_3_load_fu_301_p1, ap_condition_353, ap_condition_93)
    begin
        if ((ap_const_boolean_1 = ap_condition_93)) then
            if ((ap_const_boolean_1 = ap_condition_353)) then 
                codeOffsets_address0 <= zext_ln1130_fu_320_p1(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_4)) then 
                codeOffsets_address0 <= ap_const_lv64_4(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_6)) then 
                codeOffsets_address0 <= ap_const_lv64_6(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_7)) then 
                codeOffsets_address0 <= ap_const_lv64_7(4 - 1 downto 0);
            elsif ((i_3_load_fu_301_p1 = ap_const_lv9_8)) then 
                codeOffsets_address0 <= ap_const_lv64_8(4 - 1 downto 0);
            else 
                codeOffsets_address0 <= "XXXX";
            end if;
        else 
            codeOffsets_address0 <= "XXXX";
        end if; 
    end process;


    codeOffsets_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_8)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_7)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_6)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) 
    and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1)))) then 
            codeOffsets_ce0 <= ap_const_logic_1;
        else 
            codeOffsets_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    codeOffsets_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, ap_block_pp0_stage0, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2)
    begin
        if ((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1)))) then 
            codeOffsets_d0 <= ap_const_lv16_FFFF;
        elsif (((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_6))) then 
            codeOffsets_d0 <= ap_const_lv16_0;
        elsif (((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_7))) then 
            codeOffsets_d0 <= ap_const_lv16_30;
        elsif (((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_8))) then 
            codeOffsets_d0 <= ap_const_lv16_190;
        else 
            codeOffsets_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    codeOffsets_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1130_fu_308_p2, i_3_load_fu_301_p1, icmp_ln1145_fu_327_p2, ap_block_pp0_stage0_11001)
    begin
        if ((((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_8)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_7)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_6)) or ((icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (i_3_load_fu_301_p1 = ap_const_lv9_4)) or (not((i_3_load_fu_301_p1 = ap_const_lv9_8)) and not((i_3_load_fu_301_p1 = ap_const_lv9_7)) 
    and not((i_3_load_fu_301_p1 = ap_const_lv9_6)) and not((i_3_load_fu_301_p1 = ap_const_lv9_4)) and (icmp_ln1130_fu_308_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1145_fu_327_p2 = ap_const_lv1_1)))) then 
            codeOffsets_we0 <= ap_const_logic_1;
        else 
            codeOffsets_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_275_p2 <= std_logic_vector(unsigned(bit8_fu_104) + unsigned(ap_const_lv15_1));
    i_3_load_fu_301_p1 <= i_fu_92;
    icmp_ln1130_fu_308_p2 <= "1" when (i_fu_92 = ap_const_lv9_120) else "0";
    icmp_ln1145_fu_327_p2 <= "1" when (unsigned(i_fu_92) < unsigned(ap_const_lv9_F)) else "0";
    icmp_ln1151_fu_343_p2 <= "1" when (tmp_fu_333_p4 = ap_const_lv4_0) else "0";
    icmp_ln1154_fu_349_p2 <= "1" when (unsigned(i_fu_92) < unsigned(ap_const_lv9_90)) else "0";
    icmp_ln1160_fu_386_p2 <= "1" when (unsigned(i_fu_92) < unsigned(ap_const_lv9_118)) else "0";
    tmp_2_fu_355_p3 <= i_fu_92(8 downto 8);
    tmp_fu_333_p4 <= i_fu_92(8 downto 5);
    trunc_ln1158_fu_366_p1 <= bit9_fu_100(8 - 1 downto 0);
    zext_ln1130_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_92),64));
    zext_ln1155_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bit8_fu_104),64));
    zext_ln1158_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1158_fu_366_p1),64));
    zext_ln1161_fu_405_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bit7_fu_96),64));
    zext_ln1164_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bit8_fu_104),64));
end behav;
